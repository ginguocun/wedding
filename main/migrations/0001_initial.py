# Generated by Django 3.1.2 on 2020-10-28 19:45

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='WxUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('openid', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='微信小程序OpenID')),
                ('openid_gzh', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='微信公众号OpenID')),
                ('avatar_url', models.URLField(blank=True, null=True, verbose_name='头像')),
                ('nick_name', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='昵称')),
                ('gender', models.SmallIntegerField(choices=[(1, '男'), (2, '女'), (0, '未知')], default=0, help_text='0-->未知, 1-->男, 2-->女', verbose_name='性别')),
                ('language', models.CharField(blank=True, max_length=100, null=True, verbose_name='语言')),
                ('city', models.CharField(blank=True, max_length=200, null=True, verbose_name='城市')),
                ('province', models.CharField(blank=True, max_length=200, null=True, verbose_name='省份')),
                ('country', models.CharField(blank=True, max_length=200, null=True, verbose_name='国家')),
                ('full_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='真实姓名')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='出生日期')),
                ('desc', models.TextField(blank=True, max_length=2000, null=True, verbose_name='描述')),
                ('mobile', models.CharField(blank=True, max_length=100, null=True, verbose_name='手机号')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['-id'],
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='名称')),
            ],
            options={
                'verbose_name': '受邀人归类',
                'verbose_name_plural': '受邀人归类',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('main_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='主账号')),
            ],
            options={
                'verbose_name': '家庭',
                'verbose_name_plural': '家庭',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('desc', models.TextField(blank=True, max_length=1000, null=True, verbose_name='描述')),
                ('max_persons', models.PositiveSmallIntegerField(default=10, verbose_name='最多人数')),
                ('related_family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.family', verbose_name='关联家庭')),
            ],
            options={
                'verbose_name': '桌子',
                'verbose_name_plural': '桌子',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InvitedPeople',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('mobile', models.CharField(blank=True, max_length=100, null=True, verbose_name='手机号')),
                ('persons', models.SmallIntegerField(default=1, verbose_name='人数')),
                ('percentage', models.SmallIntegerField(default=100, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='参加概率')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.category')),
                ('related_family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.family', verbose_name='关联家庭')),
                ('table', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.table')),
            ],
            options={
                'verbose_name': '受邀人员',
                'verbose_name_plural': '受邀人员',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FamilyMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_edit', models.BooleanField(default=False, verbose_name='可编辑')),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.family', verbose_name='家庭')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='成员')),
            ],
            options={
                'verbose_name': '家庭成员',
                'verbose_name_plural': '家庭成员',
                'ordering': ['pk'],
            },
        ),
        migrations.AddField(
            model_name='category',
            name='related_family',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.family', verbose_name='关联家庭'),
        ),
    ]
